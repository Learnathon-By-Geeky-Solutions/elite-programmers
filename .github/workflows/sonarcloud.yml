name: SonarCloud - .NET Code Quality Analysis

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  sonarcloud-analysis:
    name: Analyze .NET Codebase with SonarCloud
    runs-on: ubuntu-latest
    environment: SonarCloud

    steps:
      - name: üîÑ Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: üß∞ Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "9.0.x"

      - name: ‚òï Setup Java (required for SonarCloud)
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: "zulu"

      - name: üì• Install SonarScanner CLI for .NET
        run: dotnet tool install --global dotnet-sonarscanner

      - name: üì¶ Restore project dependencies
        run: dotnet restore

      - name: üöÄ Start SonarCloud analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
          SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_INCLUSIONS: ${{ secrets.SONAR_INCLUSIONS }}
          SONAR_EXCLUSIONS: ${{ secrets.SONAR_EXCLUSIONS }}
          SONAR_TEST_INCLUSIONS: ${{ secrets.SONAR_TEST_INCLUSIONS }}
          SONAR_COVERAGE_EXCLUSIONS: ${{ secrets.SONAR_COVERAGE_EXCLUSIONS }}
        run: |
          dotnet sonarscanner begin \
            /k:"${{ secrets.SONAR_PROJECT_KEY }}" \
            /o:"${{ secrets.SONAR_ORGANIZATION }}" \
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}" \
            /d:sonar.language="cs" \
            /d:sonar.sourceEncoding="UTF-8" \
            /d:sonar.qualitygate.wait=true \
            /d:sonar.scanner.scanAll=false \
            /d:sonar.scm.provider="git" \
            /d:sonar.alm.github.api.url="https://api.github.com" \
            /d:sonar.inclusions="${{ secrets.SONAR_INCLUSIONS }}" \
            /d:sonar.exclusions="${{ secrets.SONAR_EXCLUSIONS }}" \
            /d:sonar.test.inclusions="${{ secrets.SONAR_TEST_INCLUSIONS }}" \
            /d:sonar.coverage.exclusions="${{ secrets.SONAR_COVERAGE_EXCLUSIONS }}" \
            /d:sonar.cs.vscoveragexml.reportsPaths="coverage.xml"

      - name: üõ†Ô∏è Build solution
        run: dotnet build --no-restore --configuration Release

      - name: ‚úÖ Run tests and collect coverage
        run: |
          dotnet tool install --global dotnet-coverage
          dotnet-coverage collect "dotnet test --no-build --configuration Release" -f xml -o "coverage.xml"

      - name: üßæ End SonarCloud analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
